ok: CLASS ..Imgcodecs : 


===== Header: /Users/Melancardie/Dropbox/Documents/code/Java/OwlExpress/lib/opencv-3.0.0-beta/modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h =====
Namespaces: set([''])

--- Incoming ---
['const CV_LOAD_IMAGE_UNCHANGED', '-1', [], []]
ok: CONST CV_LOAD_IMAGE_UNCHANGED=-1

--- Incoming ---
['const CV_LOAD_IMAGE_GRAYSCALE', '0', [], []]
ok: CONST CV_LOAD_IMAGE_GRAYSCALE=0

--- Incoming ---
['const CV_LOAD_IMAGE_COLOR', '1', [], []]
ok: CONST CV_LOAD_IMAGE_COLOR=1

--- Incoming ---
['const CV_LOAD_IMAGE_ANYDEPTH', '2', [], []]
ok: CONST CV_LOAD_IMAGE_ANYDEPTH=2

--- Incoming ---
['const CV_LOAD_IMAGE_ANYCOLOR', '4', [], []]
ok: CONST CV_LOAD_IMAGE_ANYCOLOR=4

--- Incoming ---
['const CV_IMWRITE_JPEG_QUALITY', '1', [], []]
ok: CONST CV_IMWRITE_JPEG_QUALITY=1

--- Incoming ---
['const CV_IMWRITE_JPEG_PROGRESSIVE', '2', [], []]
ok: CONST CV_IMWRITE_JPEG_PROGRESSIVE=2

--- Incoming ---
['const CV_IMWRITE_JPEG_OPTIMIZE', '3', [], []]
ok: CONST CV_IMWRITE_JPEG_OPTIMIZE=3

--- Incoming ---
['const CV_IMWRITE_JPEG_RST_INTERVAL', '4', [], []]
ok: CONST CV_IMWRITE_JPEG_RST_INTERVAL=4

--- Incoming ---
['const CV_IMWRITE_JPEG_LUMA_QUALITY', '5', [], []]
ok: CONST CV_IMWRITE_JPEG_LUMA_QUALITY=5

--- Incoming ---
['const CV_IMWRITE_JPEG_CHROMA_QUALITY', '6', [], []]
ok: CONST CV_IMWRITE_JPEG_CHROMA_QUALITY=6

--- Incoming ---
['const CV_IMWRITE_PNG_COMPRESSION', '16', [], []]
ok: CONST CV_IMWRITE_PNG_COMPRESSION=16

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY', '17', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY=17

--- Incoming ---
['const CV_IMWRITE_PNG_BILEVEL', '18', [], []]
ok: CONST CV_IMWRITE_PNG_BILEVEL=18

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY_DEFAULT', '0', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY_DEFAULT=0

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY_FILTERED', '1', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY_FILTERED=1

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY', '2', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY=2

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY_RLE', '3', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY_RLE=3

--- Incoming ---
['const CV_IMWRITE_PNG_STRATEGY_FIXED', '4', [], []]
ok: CONST CV_IMWRITE_PNG_STRATEGY_FIXED=4

--- Incoming ---
['const CV_IMWRITE_PXM_BINARY', '32', [], []]
ok: CONST CV_IMWRITE_PXM_BINARY=32

--- Incoming ---
['const CV_IMWRITE_WEBP_QUALITY', '64', [], []]
ok: CONST CV_IMWRITE_WEBP_QUALITY=64

--- Incoming ---
['const CV_CVTIMG_FLIP', '1', [], []]
ok: CONST CV_CVTIMG_FLIP=1

--- Incoming ---
['const CV_CVTIMG_SWAP_RB', '2', [], []]
ok: CONST CV_CVTIMG_SWAP_RB=2


===== Header: /Users/Melancardie/Dropbox/Documents/code/Java/OwlExpress/lib/opencv-3.0.0-beta/modules/imgcodecs/include/opencv2/imgcodecs/ios.h =====
Namespaces: set([''])


===== Header: /Users/Melancardie/Dropbox/Documents/code/Java/OwlExpress/lib/opencv-3.0.0-beta/modules/imgcodecs/include/opencv2/imgcodecs.hpp =====
Namespaces: set(['', 'cv'])

--- Incoming ---
['const cv.IMREAD_UNCHANGED', '-1', [], []]
ok: CONST IMREAD_UNCHANGED=-1

--- Incoming ---
['const cv.IMREAD_GRAYSCALE', '0', [], []]
ok: CONST IMREAD_GRAYSCALE=0

--- Incoming ---
['const cv.IMREAD_COLOR', '1', [], []]
ok: CONST IMREAD_COLOR=1

--- Incoming ---
['const cv.IMREAD_ANYDEPTH', '2', [], []]
ok: CONST IMREAD_ANYDEPTH=2

--- Incoming ---
['const cv.IMREAD_ANYCOLOR', '4', [], []]
ok: CONST IMREAD_ANYCOLOR=4

--- Incoming ---
['const cv.IMREAD_LOAD_GDAL', '8', [], []]
ok: CONST IMREAD_LOAD_GDAL=8

--- Incoming ---
['const cv.IMWRITE_JPEG_QUALITY', '1', [], []]
ok: CONST IMWRITE_JPEG_QUALITY=1

--- Incoming ---
['const cv.IMWRITE_JPEG_PROGRESSIVE', '2', [], []]
ok: CONST IMWRITE_JPEG_PROGRESSIVE=2

--- Incoming ---
['const cv.IMWRITE_JPEG_OPTIMIZE', '3', [], []]
ok: CONST IMWRITE_JPEG_OPTIMIZE=3

--- Incoming ---
['const cv.IMWRITE_JPEG_RST_INTERVAL', '4', [], []]
ok: CONST IMWRITE_JPEG_RST_INTERVAL=4

--- Incoming ---
['const cv.IMWRITE_JPEG_LUMA_QUALITY', '5', [], []]
ok: CONST IMWRITE_JPEG_LUMA_QUALITY=5

--- Incoming ---
['const cv.IMWRITE_JPEG_CHROMA_QUALITY', '6', [], []]
ok: CONST IMWRITE_JPEG_CHROMA_QUALITY=6

--- Incoming ---
['const cv.IMWRITE_PNG_COMPRESSION', '16', [], []]
ok: CONST IMWRITE_PNG_COMPRESSION=16

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY', '17', [], []]
ok: CONST IMWRITE_PNG_STRATEGY=17

--- Incoming ---
['const cv.IMWRITE_PNG_BILEVEL', '18', [], []]
ok: CONST IMWRITE_PNG_BILEVEL=18

--- Incoming ---
['const cv.IMWRITE_PXM_BINARY', '32', [], []]
ok: CONST IMWRITE_PXM_BINARY=32

--- Incoming ---
['const cv.IMWRITE_WEBP_QUALITY', '64', [], []]
ok: CONST IMWRITE_WEBP_QUALITY=64

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY_DEFAULT', '0', [], []]
ok: CONST IMWRITE_PNG_STRATEGY_DEFAULT=0

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY_FILTERED', '1', [], []]
ok: CONST IMWRITE_PNG_STRATEGY_FILTERED=1

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY', '2', [], []]
ok: CONST IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY=2

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY_RLE', '3', [], []]
ok: CONST IMWRITE_PNG_STRATEGY_RLE=3

--- Incoming ---
['const cv.IMWRITE_PNG_STRATEGY_FIXED', '4', [], []]
ok: CONST IMWRITE_PNG_STRATEGY_FIXED=4

--- Incoming ---
[   'cv.imread',
    'Mat',
    [],
    [['String', 'filename', '', []], ['int', 'flags', 'IMREAD_COLOR', []]]]
ok: FUNC <Mat cv..imread [ARG String filename=, ARG int flags=IMREAD_COLOR]>

--- Incoming ---
[   'cv.imwrite',
    'bool',
    [],
    [   ['String', 'filename', '', []],
        ['Mat', 'img', '', []],
        ['vector_int', 'params', 'std::vector<int>()', []]]]
ok: FUNC <bool cv..imwrite [ARG String filename=, ARG Mat img=, ARG vector_int params=std::vector<int>()]>

--- Incoming ---
['cv.imdecode', 'Mat', [], [['Mat', 'buf', '', []], ['int', 'flags', '', []]]]
ok: FUNC <Mat cv..imdecode [ARG Mat buf=, ARG int flags=]>

--- Incoming ---
[   'cv.imencode',
    'bool',
    [],
    [   ['String', 'ext', '', []],
        ['Mat', 'img', '', []],
        ['vector_uchar', 'buf', '', ['/O']],
        ['vector_int', 'params', 'std::vector<int>()', []]]]
ok: FUNC <bool cv..imencode [ARG String ext=, ARG Mat img=, ARG vector_uchar buf=, ARG vector_int params=std::vector<int>()]>


===== Header: /Users/Melancardie/Dropbox/Documents/code/Java/OwlExpress/lib/opencv-3.0.0-beta/modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp =====
Namespaces: set(['', 'cv'])


===== Generating... =====
CLASS ..Imgcodecs : 
[CONST CV_LOAD_IMAGE_UNCHANGED=-1, CONST CV_LOAD_IMAGE_GRAYSCALE=0, CONST CV_LOAD_IMAGE_COLOR=1, CONST CV_LOAD_IMAGE_ANYDEPTH=2, CONST CV_LOAD_IMAGE_ANYCOLOR=4, CONST CV_IMWRITE_JPEG_QUALITY=1, CONST CV_IMWRITE_JPEG_PROGRESSIVE=2, CONST CV_IMWRITE_JPEG_OPTIMIZE=3, CONST CV_IMWRITE_JPEG_RST_INTERVAL=4, CONST CV_IMWRITE_JPEG_LUMA_QUALITY=5, CONST CV_IMWRITE_JPEG_CHROMA_QUALITY=6, CONST CV_IMWRITE_PNG_COMPRESSION=16, CONST CV_IMWRITE_PNG_STRATEGY=17, CONST CV_IMWRITE_PNG_BILEVEL=18, CONST CV_IMWRITE_PNG_STRATEGY_DEFAULT=0, CONST CV_IMWRITE_PNG_STRATEGY_FILTERED=1, CONST CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY=2, CONST CV_IMWRITE_PNG_STRATEGY_RLE=3, CONST CV_IMWRITE_PNG_STRATEGY_FIXED=4, CONST CV_IMWRITE_PXM_BINARY=32, CONST CV_IMWRITE_WEBP_QUALITY=64, CONST CV_CVTIMG_FLIP=1, CONST CV_CVTIMG_SWAP_RB=2, CONST IMREAD_UNCHANGED=-1, CONST IMREAD_GRAYSCALE=0, CONST IMREAD_COLOR=1, CONST IMREAD_ANYDEPTH=2, CONST IMREAD_ANYCOLOR=4, CONST IMREAD_LOAD_GDAL=8, CONST IMWRITE_JPEG_QUALITY=1, CONST IMWRITE_JPEG_PROGRESSIVE=2, CONST IMWRITE_JPEG_OPTIMIZE=3, CONST IMWRITE_JPEG_RST_INTERVAL=4, CONST IMWRITE_JPEG_LUMA_QUALITY=5, CONST IMWRITE_JPEG_CHROMA_QUALITY=6, CONST IMWRITE_PNG_COMPRESSION=16, CONST IMWRITE_PNG_STRATEGY=17, CONST IMWRITE_PNG_BILEVEL=18, CONST IMWRITE_PXM_BINARY=32, CONST IMWRITE_WEBP_QUALITY=64, CONST IMWRITE_PNG_STRATEGY_DEFAULT=0, CONST IMWRITE_PNG_STRATEGY_FILTERED=1, CONST IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY=2, CONST IMWRITE_PNG_STRATEGY_RLE=3, CONST IMWRITE_PNG_STRATEGY_FIXED=4]
FUNC <Mat cv..imread [ARG String filename=, ARG int flags=IMREAD_COLOR]>
FUNC <bool cv..imwrite [ARG String filename=, ARG Mat img=, ARG vector_int params=std::vector<int>()]>
FUNC <Mat cv..imdecode [ARG Mat buf=, ARG int flags=]>
FUNC <bool cv..imencode [ARG String ext=, ARG Mat img=, ARG vector_uchar buf=, ARG vector_int params=std::vector<int>()]>
